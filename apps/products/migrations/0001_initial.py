# Generated by Django 4.1.5 on 2023-04-27 05:05

import apps.products.utils.units
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_measurement.models
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('slug', models.SlugField(max_length=150, unique=True, verbose_name='slug')),
                ('description', models.TextField(verbose_name='description')),
                ('background_image', models.ImageField(blank=True, null=True, upload_to='category-backgrounds', verbose_name='background_image')),
                ('is_active', models.BooleanField(default=False, verbose_name='is_active')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='products.category', verbose_name='parent')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Все медиа',
                'verbose_name_plural': 'Все медии',
            },
        ),
        migrations.CreateModel(
            name='NewProductModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=100, verbose_name='sku')),
                ('title_en', models.CharField(max_length=900, verbose_name='title_en')),
                ('title_ru', models.CharField(max_length=900, verbose_name='title_ru')),
                ('is_active', models.BooleanField(default=False, verbose_name='is_active')),
                ('is_default', models.BooleanField(default=False, verbose_name='is_default')),
                ('price', models.DecimalField(decimal_places=0, max_digits=12, verbose_name='price')),
                ('sale_price', models.DecimalField(decimal_places=0, max_digits=12, verbose_name='sale_price')),
                ('installment_plan', models.CharField(max_length=250, verbose_name='installment_plan')),
                ('descriptions', models.TextField(max_length=2500, null=True, verbose_name='descriptions')),
                ('is_on_sale', models.BooleanField(default=False, verbose_name='is_on_sale')),
                ('alifshop', models.BooleanField(default=False, verbose_name='alifshop')),
                ('USA_product', models.BooleanField(default=False, verbose_name='USA_product')),
                ('weight', django_measurement.models.MeasurementField(blank=True, measurement=apps.products.utils.units.Mass, null=True, verbose_name='weight')),
                ('front_image', models.URLField(blank=True, max_length=900, null=True, verbose_name='front_image')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('status', models.CharField(choices=[('В прогрессе', 'Process'), ('Успешно', 'Success'), ('Ошибка', 'Failed'), ('Удалено', 'Deleted')], default='В прогрессе', max_length=50, verbose_name='status')),
            ],
            options={
                'verbose_name': 'NewProduct',
                'verbose_name_plural': 'NewProducts',
            },
        ),
        migrations.CreateModel(
            name='PrColorModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвет',
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'ProductAttribute',
                'verbose_name_plural': 'ProductAttributes',
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_value', models.CharField(max_length=255, verbose_name='attribute_value')),
                ('product_attribute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_attribute', to='products.productattribute', verbose_name='product_attribute')),
            ],
            options={
                'verbose_name': 'ProductAttributeValue',
                'verbose_name_plural': 'ProductAttributeValue',
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'ProductType',
                'verbose_name_plural': 'ProductTypes',
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='date_added')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.newproductmodel', verbose_name='wishlists')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_checked', models.DateTimeField(blank=True, null=True, verbose_name='last_checked')),
                ('units', models.IntegerField(default=0, verbose_name='units')),
                ('units_sold', models.IntegerField(default=0, verbose_name='units_sold')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='stocks', to='products.newproductmodel', verbose_name='product_inventory')),
            ],
            options={
                'verbose_name': 'Stock',
                'verbose_name_plural': 'Stock',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(verbose_name='rating')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.newproductmodel', verbose_name='ratings')),
            ],
            options={
                'verbose_name': 'product_all',
                'verbose_name_plural': 'product_alls',
            },
        ),
        migrations.CreateModel(
            name='ProductTypeAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_attribute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='productattribute', to='products.productattribute', verbose_name='attributevalues')),
                ('product_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='producttype', to='products.producttype', verbose_name='product')),
            ],
            options={
                'verbose_name': 'ProductTypeAttribute',
                'verbose_name_plural': 'ProductTypeAttribute',
                'unique_together': {('product_attribute', 'product_type')},
            },
        ),
        migrations.AddField(
            model_name='producttype',
            name='product_type_attributes',
            field=models.ManyToManyField(related_name='product_type_attributes', through='products.ProductTypeAttribute', to='products.productattribute', verbose_name='product_type_attributes'),
        ),
        migrations.AddField(
            model_name='newproductmodel',
            name='attribute_values',
            field=models.ManyToManyField(blank=True, null=True, related_name='attributes', to='products.productattributevalue', verbose_name='attributes'),
        ),
        migrations.AddField(
            model_name='newproductmodel',
            name='brand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='new_brand', to='products.brand', verbose_name='brand'),
        ),
        migrations.AddField(
            model_name='newproductmodel',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='products.category', verbose_name='category'),
        ),
        migrations.AddField(
            model_name='newproductmodel',
            name='color',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='new_colors', to='products.prcolormodel', verbose_name='color'),
        ),
        migrations.AddField(
            model_name='newproductmodel',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='new_products', to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.CreateModel(
            name='NewMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_url', models.ImageField(upload_to='product/images', verbose_name='image_url')),
                ('alt_text', models.CharField(max_length=255, verbose_name='img_url')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='is_feature')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='created_at')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='new_media', to='products.newproductmodel', verbose_name='media')),
            ],
            options={
                'verbose_name': 'Media',
                'verbose_name_plural': 'Media',
            },
        ),
        migrations.CreateModel(
            name='AllMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, null=True, upload_to='all_images')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('i', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.media')),
            ],
            options={
                'verbose_name': 'Все медиа',
                'verbose_name_plural': 'Все медии',
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attributevalues', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attributevaluess', to='products.productattributevalue', verbose_name='attributevalues')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='productattributevaluess', to='products.newproductmodel', verbose_name='product')),
            ],
            options={
                'verbose_name': 'ProductAttributeValues',
                'verbose_name_plural': 'ProductAttributeValues',
                'unique_together': {('attributevalues', 'product')},
            },
        ),
    ]
